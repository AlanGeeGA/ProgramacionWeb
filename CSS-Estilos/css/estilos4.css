/* ---- Pseudoelementos ---- */
/*
    ::first-letter - elementos bloque
    ::first-line - elementos bloque
    ::selection
    ::before
    ::after
*/

.titulo::first-letter {
    color: red;
    font-size: 50px;
}

.linea::first-letter {
    color: red;
}

.linea {
    display: block;
}

.texto::first-line {
    color: green;
}

.texto::selection {
    color: red;
    background: yellow;
}

/* ::before y ::after
La propiedad de content es obligatoria.
Por defecto son elementos en l√≠nea, y se pueden visualizar como hijos
del elemento.
*/

.dinero::before {
    content: '$';
    color: red;
}

.dinero::after {
    content: '.00';
    color: red;
}

.ejemplo::before, .ejemplo::after {
    background:  black;
    width: 10px;
    height: 10px;
    content: '';
    display: inline-block;
}

/* ---- PSEUDOCLASES DINAMICAS ---- */
/*
    :link - Link no visitado
    :visited - Link visitado
    :active - Al momento del click (link)
    :hover 
    :focus
*/

.enlace:link {
    color: green;
}

.enlace:visited {
    color: white;
}

.enlace:active {
    transform: scale(.8);
}

.enlace {
    padding: 10px;
    display: inline-block;
    background: blue;
    color: white;
    text-decoration: none;
    border-radius: 5px;
}

.enlace:hover {
    background: black;
}

input:focus {
    background: yellow;
    font-size: 15px;
}

/* ---- ESTADO ---- */
/* 
    :enabled
    :disabled
    :required
    :opcional
    :valid
    :invalid
    :in-range
    :out-of-range
*/

.input, .label {
    display: block;
}

.input:enabled {
    background: green;
}

.input:disabled {
    border: 1px solid black;
}

.input:required {
    background: red;
}

.checkbox, .checkbox + label {
    display: inline-block;
}

.input:checked + label {
    font-size: 30px;
}

.input:in-range {
    background:  green;
}

.input:out-of-range {
    background: red;
}

/* ---- ESTRUCTURALES ---- */
/*
    CHILD
    :first-child - Seleccionaria el primer hijo, no importa el tipo del elemento
    :lastchild

    :nth-child(n) - Seleccionaria al hijo n
    :nth-last-child()
    :only-child

    Valores:
    odd - Impares
    even - Pares
    numeros enteros

    type:
    :first-of-type
    :last-of-type
    :nth-of-type()
*/

.parrafo:first-child {
    background: green;
}

.parrafo:nth-child(odd) {
    background: tomato;
}

.parrafo:nth-child(even) {
    background: lightgreen;
}